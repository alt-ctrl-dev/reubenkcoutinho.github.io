{"version":3,"sources":["ListComponent.js","Stop.js","Location.js","App.js","serviceWorker.js","index.js"],"names":["ListComponent","lines","this","props","listItems","map","line","index","react_default","a","createElement","ListComponent_CardComponent","key","line_name","line_id","line_time","stops","stop_time","stop_id","length","Card","Group","Component","CardComponent","state","delay","result","_this2","axios","get","concat","then","resp","data","json","setState","catch","err","console","error","Content","Header","Label","size","color","Description","Stop","timestamp","searching","output","handleClick","event","_this","next_line","handleStopIDChange","target","value","handleTimeChange","date","Date","hours","getHours","minutes","getMinutes","className","as","textAlign","Form","widths","Input","fluid","label","placeholder","type","onChange","required","Button","onClick","react","Placeholder","Line","Segment","src_ListComponent","Location","x","y","handleXChange","handleYChange","App","activeItem","handleItemClick","e","_ref","name","Container","text","Menu","pointing","secondary","Item","active","src_Location","src_Stop","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f69a5e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Label } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass ListComponent extends Component {\n  render() {\n    const { lines } = this.props;\n    let listItems = lines.map((line, index) => (\n      <CardComponent\n        key={index}\n        line_name={line.line_name}\n        line_id={line.line_id}\n        line_time={line.stops[0].stop_time}\n        stop_id={line.stops[0].stop_id}\n      />\n    ));\n    if (lines.length === 0) {\n      listItems = (\n        <CardComponent\n          line_name=\"No available service\"\n          line_id=\"\"\n          line_time=\"\"\n          stop_id=\"\"\n        />\n      );\n    }\n\n    return <Card.Group>{listItems}</Card.Group>;\n  }\n}\n\nclass CardComponent extends Component {\n  state = { delay: 0, result: null };\n  componentWillMount() {\n    if (this.props.line_id !== \"\")\n      axios\n        .get(\n          `http://localhost:8081/api/line_delay?line_id=${this.props.line_id}`\n        )\n        .then(resp => {\n          return resp.data;\n        })\n        .then(json => {\n          this.setState(json);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n  }\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header>\n            {this.props.line_name}\n            {this.state.result ? (\n              <Label size=\"mini\" color=\"red\">\n                {\"Delayed\"}\n              </Label>\n            ) : null}\n          </Card.Header>\n          <Card.Description>\n            {this.props.stop_id !== \"\"\n              ? `Next vehicle to arrive at stop ${\n                  this.props.stop_id\n                } will be at ${this.props.line_time}`\n              : \"\"}\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default ListComponent;\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Segment, Placeholder, Header, Form, Button } from \"semantic-ui-react\";\n\nimport ListComponent from \"./ListComponent\";\n\nclass Stop extends Component {\n  state = { stop_id: 0, timestamp: \"00:00\", searching: null, output: {} };\n  handleClick = event => {\n    this.setState({ searching: true });\n    axios\n      .get(\n        `http://localhost:8081/api/next_vehicle?stop_id=${\n          this.state.stop_id\n        }&timestamp=${this.state.timestamp}:00`\n      )\n      .then(resp => {\n        return resp.data.next_line;\n      })\n      .then(json => {\n        this.setState({ searching: false, output: json });\n      })\n      .catch(err => {\n        this.setState({ searching: false });\n      });\n  };\n  handleStopIDChange = event => this.setState({ stop_id: event.target.value });\n  handleTimeChange = event => {\n    this.setState({ timestamp: event.target.value });\n  };\n  componentWillMount() {\n    let date = new Date();\n    let hours = date.getHours();\n    if (hours < 10) hours = \"0\" + hours;\n    let minutes = date.getMinutes();\n    if (minutes < 10) minutes = \"0\" + minutes;\n    this.setState({ timestamp: `${hours}:${minutes}` });\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <Header as=\"h2\" textAlign=\"center\">\n          Stop\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              fluid\n              label=\"Stop ID\"\n              placeholder=\"0\"\n              type=\"number\"\n              value={this.state.stop_id}\n              onChange={this.handleStopIDChange}\n              required\n            />\n            <Form.Input\n              fluid\n              label=\"Timezone\"\n              placeholder=\"HH:MM:SS\"\n              type=\"time\"\n              value={this.state.timestamp}\n              onChange={this.handleTimeChange}\n              required\n            />\n          </Form.Group>\n          <Button type=\"button\" onClick={this.handleClick}>\n            Search\n          </Button>\n        </Form>\n        <Fragment>\n          {this.state.searching === null ? null : this.state.searching ===\n            true ? (\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          ) : (\n            <Segment>\n              <ListComponent lines={this.state.output} />\n            </Segment>\n          )}\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Stop;\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Segment, Placeholder, Header, Form, Button } from \"semantic-ui-react\";\n\nimport ListComponent from \"./ListComponent\";\n\nclass Location extends Component {\n  state = { x: 0, y: 0, timestamp: \"00:00\", searching: null, output: {} };\n  handleClick = event => {\n    this.setState({ searching: true });\n    axios\n      .get(\n        `http://localhost:8081/api/find_vehicle?x=${this.state.x}&y=${\n          this.state.y\n        }&timestamp=${this.state.timestamp}:00`\n      )\n      .then(resp => {\n        return resp.data.next_line;\n      })\n      .then(json => {\n        this.setState({ searching: false, output: json });\n      })\n      .catch(err => {\n        this.setState({ searching: false });\n      });\n  };\n  handleXChange = event => this.setState({ x: event.target.value });\n  handleYChange = event => this.setState({ y: event.target.value });\n  handleTimeChange = event => {\n    this.setState({ timestamp: event.target.value });\n  };\n  componentWillMount() {\n    let date = new Date();\n    let hours = date.getHours();\n    if (hours < 10) hours = \"0\" + hours;\n    let minutes = date.getMinutes();\n    if (minutes < 10) minutes = \"0\" + minutes;\n    this.setState({ timestamp: `${hours}:${minutes}` });\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <Header as=\"h2\" textAlign=\"center\">\n          Location\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              fluid\n              label=\"X coordinate\"\n              placeholder=\"0\"\n              type=\"number\"\n              value={this.state.x}\n              onChange={this.handleXChange}\n              required\n            />\n            <Form.Input\n              fluid\n              label=\"Y coordinate\"\n              placeholder=\"0\"\n              type=\"number\"\n              value={this.state.y}\n              onChange={this.handleYChange}\n              required\n            />\n            <Form.Input\n              fluid\n              label=\"Timezone\"\n              placeholder=\"HH:MM:SS\"\n              type=\"time\"\n              value={this.state.timestamp}\n              onChange={this.handleTimeChange}\n              required\n            />\n          </Form.Group>\n          <Button type=\"button\" onClick={this.handleClick}>\n            Search\n          </Button>\n        </Form>\n        <Fragment>\n          {this.state.searching === null ? null : this.state.searching ===\n            true ? (\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          ) : (\n            <Segment>\n              <ListComponent lines={this.state.output} />\n            </Segment>\n          )}\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Location;\n","import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport { Menu, Segment, Container, Header } from \"semantic-ui-react\";\n\nimport Stop from \"./Stop\";\nimport Location from \"./Location\";\n\nclass App extends Component {\n  state = { activeItem: \"location\" };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n    return (\n      <div className=\"main\">\n        <Container text>\n          <Header as=\"h1\" textAlign=\"center\">\n            Public Transport of Verspaetung\n          </Header>\n          <Menu pointing secondary>\n            <Menu.Item\n              name=\"location\"\n              active={activeItem === \"location\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"stop\"\n              active={activeItem === \"stop\"}\n              onClick={this.handleItemClick}\n            />\n          </Menu>\n\n          <Segment>\n            {activeItem === \"location\" ? <Location /> : <Stop />}\n          </Segment>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}